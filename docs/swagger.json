{
    "swagger": "2.0",
    "info": {
        "description": "API de e-commerce feita em Go com Fiber",
        "title": "Ecommerce Go API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Otávio Augusto",
            "url": "http://github.com/T4vexx",
            "email": "contato@otavioteixeira.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:3333",
    "basePath": "/",
    "paths": {
        "/buyer/payment": {
            "get": {
                "description": "Creates a payment request for the authenticated buyer. If an active payment exists, returns its client secret; otherwise, creates a new payment.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Initiates a payment",
                "responses": {
                    "200": {
                        "description": "Payment information including public key and client secret",
                        "schema": {
                            "$ref": "#/definitions/dto.MakePaymentSuccess"
                        }
                    },
                    "400": {
                        "description": "Error generating payment or saving payment",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Error generating order id",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/buyer/verify": {
            "get": {
                "description": "Checks the status of an active payment for the authenticated buyer, updates the payment status, and creates an order if payment is successful.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Verifies payment status",
                "responses": {
                    "200": {
                        "description": "Verification result along with payment response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "No active payment exists or error during verification",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error during verification",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "description": "Retorna uma lista com todas as categorias disponíveis",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Catalog"
                ],
                "summary": "Obtém todas as categorias",
                "responses": {
                    "200": {
                        "description": "Retorna todas as categorias",
                        "schema": {
                            "$ref": "#/definitions/dto.GetCategoriesSuccess"
                        }
                    },
                    "404": {
                        "description": "Retorna a mensagem de erro",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "description": "Retorna os detalhes de uma categoria com base no ID informado",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Catalog"
                ],
                "summary": "Obtém categoria por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID da Categoria",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retorna a categoria por id caso o usuário tenha permissão",
                        "schema": {
                            "$ref": "#/definitions/dto.GetCategorySuccess"
                        }
                    },
                    "404": {
                        "description": "Retorna a mensagem de erro",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Realiza o login do usuário utilizando email e senha",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Login do usuário",
                "parameters": [
                    {
                        "description": "Credenciais do usuário",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dados retornados ao cadastrar o usuário",
                        "schema": {
                            "$ref": "#/definitions/dto.UserSignupResponse"
                        }
                    },
                    "400": {
                        "description": "Erro na requisição",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "description": "Retorna uma lista com todos os produtos disponíveis",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Catalog"
                ],
                "summary": "Obtém todos os produtos",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "description": "Retorna os detalhes de um produto com base no ID informado",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Catalog"
                ],
                "summary": "Obtém produto por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do Produto",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Realiza o cadastro de um novo usuário com as informações fornecidas",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Registra um novo usuário",
                "parameters": [
                    {
                        "description": "Dados para cadastro do usuário",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserSignup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dados retornados ao cadastrar o usuário",
                        "schema": {
                            "$ref": "#/definitions/dto.UserSignupResponse"
                        }
                    },
                    "400": {
                        "description": "Erro na requisição",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/seller/categories": {
            "post": {
                "description": "Cria uma categoria utilizando os dados fornecidos no corpo da requisição",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Catalog"
                ],
                "summary": "Cria uma nova categoria",
                "parameters": [
                    {
                        "description": "Dados para criação da categoria",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateCategoryResquest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/seller/categories/{id}": {
            "delete": {
                "description": "Remove uma categoria do sistema com base no ID informado",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Catalog"
                ],
                "summary": "Exclui uma categoria",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID da Categoria",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "patch": {
                "description": "Atualiza os dados de uma categoria existente com base no ID informado",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Catalog"
                ],
                "summary": "Atualiza uma categoria",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID da Categoria",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados para atualização da categoria",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateCategoryResquest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/seller/products": {
            "get": {
                "description": "Retorna a lista de produtos do vendedor autenticado",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Catalog"
                ],
                "summary": "Obtém os produtos do vendedor",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Cria um produto para o vendedor autenticado com os dados fornecidos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Catalog"
                ],
                "summary": "Cria um novo produto",
                "parameters": [
                    {
                        "description": "Dados para criação do produto",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateProductRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/seller/products/{id}": {
            "put": {
                "description": "Atualiza os dados de um produto do vendedor autenticado com base no ID informado",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Catalog"
                ],
                "summary": "Edita um produto",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do Produto",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados atualizados do produto",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateProductRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove um produto do vendedor autenticado com base no ID informado",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Catalog"
                ],
                "summary": "Exclui um produto",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do Produto",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "patch": {
                "description": "Atualiza a quantidade em estoque de um produto do vendedor autenticado",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Catalog"
                ],
                "summary": "Atualiza o estoque de um produto",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do Produto",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados para atualização do estoque",
                        "name": "stock",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateStockRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/users/become-seller": {
            "post": {
                "description": "Atualiza o status do usuário para vendedor, realizando as devidas validações",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Torna o usuário em vendedor",
                "parameters": [
                    {
                        "description": "Dados para tornar-se vendedor",
                        "name": "seller",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SellerInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/users/cart": {
            "post": {
                "description": "Adiciona produtos ao carrinho do usuário autenticado",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Adiciona item(s) ao carrinho",
                "parameters": [
                    {
                        "description": "Dados do carrinho",
                        "name": "cart",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateCartRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/users/order": {
            "get": {
                "description": "Retorna a lista de pedidos do usuário autenticado",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Obtém todos os pedidos",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/users/order/{id}": {
            "get": {
                "description": "Retorna os detalhes de um pedido específico do usuário autenticado",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Obtém pedido por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID do pedido",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/users/profile": {
            "get": {
                "description": "Retorna os dados do perfil do usuário autenticado",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Obtém o perfil do usuário",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Cria o perfil do usuário autenticado com as informações fornecidas",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Cria o perfil do usuário",
                "parameters": [
                    {
                        "description": "Dados para criação do perfil",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ProfileInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "patch": {
                "description": "Atualiza as informações do perfil do usuário autenticado",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Atualiza o perfil do usuário",
                "parameters": [
                    {
                        "description": "Dados para atualização do perfil",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ProfileInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/users/verify": {
            "get": {
                "description": "Gera e retorna o código de verificação para o usuário autenticado",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Obtém código de verificação",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Verifica o código enviado pelo usuário para ativação/validação da conta",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Verifica código de autenticação",
                "parameters": [
                    {
                        "description": "Código de verificação",
                        "name": "verification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.VerificationCodeInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Category": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "display_order": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "integer"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Product"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.Product": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "stock": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.AddressInput": {
            "type": "object",
            "properties": {
                "address_line_1": {
                    "type": "string"
                },
                "address_line_2": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "postal_code": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateCartRequest": {
            "type": "object",
            "properties": {
                "product_id": {
                    "type": "integer"
                },
                "qty": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateCategoryResquest": {
            "type": "object",
            "properties": {
                "display_order": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "integer"
                }
            }
        },
        "dto.CreateProductRequest": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "stock": {
                    "type": "integer"
                }
            }
        },
        "dto.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Please provide valid inputs"
                },
                "reason": {
                    "type": "string",
                    "example": "detalhes do erro se houver"
                }
            }
        },
        "dto.GetCategoriesSuccess": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Category"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Categories"
                }
            }
        },
        "dto.GetCategorySuccess": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/domain.Category"
                },
                "message": {
                    "type": "string",
                    "example": "Categories"
                }
            }
        },
        "dto.MakePaymentSuccess": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "make payment"
                },
                "pubKey": {
                    "type": "string",
                    "example": "exemplo_de_chave_privada_asd2asd2"
                },
                "secret": {
                    "type": "string",
                    "example": "exemplo_de_segredo_stripe_asd2asd2"
                }
            }
        },
        "dto.ProfileInput": {
            "type": "object",
            "properties": {
                "address_input": {
                    "$ref": "#/definitions/dto.AddressInput"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                }
            }
        },
        "dto.SellerInput": {
            "type": "object",
            "properties": {
                "bank_account_number": {
                    "type": "integer"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "payment_type": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "swift_code": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateStockRequest": {
            "type": "object",
            "properties": {
                "stock": {
                    "type": "integer"
                }
            }
        },
        "dto.UserLogin": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.UserSignup": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "dto.UserSignupResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "login/register"
                },
                "token": {
                    "type": "string",
                    "example": "token JWT"
                }
            }
        },
        "dto.VerificationCodeInput": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        }
    }
}